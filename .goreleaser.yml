version: 2

builds:
  # ==================== Linux 构建 ====================
  
  # Linux AMD64 (x86_64) - 最常用的服务器架构
  - id: linux-amd64
    env:
      - CGO_ENABLED=1
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - amd64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux ARM64 (aarch64) - 新款ARM服务器、树莓派4 64位
  - id: linux-arm64
    env:
      - CGO_ENABLED=1
      - CC=aarch64-linux-gnu-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - arm64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux ARMv7 (hard-float) - 树莓派2/3/4 32位、大多数ARM设备
  - id: linux-armv7
    env:
      - CGO_ENABLED=1
      - CC=arm-linux-gnueabihf-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - arm
    goarm:
      - 7
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux ARMv6 (soft-float) - 树莓派1、老款ARM设备
  - id: linux-armv6
    env:
      - CGO_ENABLED=1
      - CC=arm-linux-gnueabi-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - arm
    goarm:
      - 6
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux MIPS - 路由器、嵌入式设备 (big-endian)
  - id: linux-mips
    env:
      - CGO_ENABLED=1
      - CC=mips-linux-gnu-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - mips
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux MIPSLE - 路由器、嵌入式设备 (little-endian)
  - id: linux-mipsle
    env:
      - CGO_ENABLED=1
      - CC=mipsel-linux-gnu-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - mipsle
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux MIPS64 - 高端路由器、服务器
  - id: linux-mips64
    env:
      - CGO_ENABLED=1
      - CC=mips64-linux-gnuabi64-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - mips64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux MIPS64LE - 高端路由器、服务器 (little-endian)
  - id: linux-mips64le
    env:
      - CGO_ENABLED=1
      - CC=mips64el-linux-gnuabi64-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - mips64le
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux PowerPC64LE - IBM Power服务器
  - id: linux-ppc64le
    env:
      - CGO_ENABLED=1
      - CC=powerpc64le-linux-gnu-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - ppc64le
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux s390x - IBM System z大型机
  - id: linux-s390x
    env:
      - CGO_ENABLED=1
      - CC=s390x-linux-gnu-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - s390x
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Linux RISC-V 64-bit - 新兴开源架构
  - id: linux-riscv64
    env:
      - CGO_ENABLED=1
      - CC=riscv64-linux-gnu-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - linux
    goarch:
      - riscv64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension

  # ==================== Windows 构建 ====================
      
  # Windows AMD64 - 主流Windows系统
  - id: windows-amd64
    env:
      - CGO_ENABLED=1
      - CC=x86_64-w64-mingw32-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - windows
    goarch:
      - amd64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # Windows 386 - 32位Windows系统
  - id: windows-386
    env:
      - CGO_ENABLED=1
      - CC=i686-w64-mingw32-gcc
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - windows
    goarch:
      - 386
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension

  # ==================== FreeBSD 构建 ====================
  # 注意：FreeBSD需要特殊的CGO设置，可能需要FreeBSD系统来编译
  # 这里先尝试交叉编译，如果失败可以移除
      
  # FreeBSD AMD64 - FreeBSD服务器
  - id: freebsd-amd64
    env:
      - CGO_ENABLED=1
      - GOOS=freebsd
      - GOARCH=amd64
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - freebsd
    goarch:
      - amd64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension
      
  # FreeBSD ARM64 - FreeBSD ARM服务器
  - id: freebsd-arm64
    env:
      - CGO_ENABLED=1
      - GOOS=freebsd
      - GOARCH=arm64
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - freebsd
    goarch:
      - arm64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension

  # ==================== OpenBSD 构建 ====================
      
  # OpenBSD AMD64 - OpenBSD服务器
  - id: openbsd-amd64
    env:
      - CGO_ENABLED=1
      - GOOS=openbsd
      - GOARCH=amd64
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - openbsd
    goarch:
      - amd64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension

  # ==================== NetBSD 构建 ====================
      
  # NetBSD AMD64 - NetBSD服务器
  - id: netbsd-amd64
    env:
      - CGO_ENABLED=1
      - GOOS=netbsd
      - GOARCH=amd64
    main: ./cmd/server
    binary: nodepassdash
    goos:
      - netbsd
    goarch:
      - amd64
    flags:
      - -trimpath
    ldflags:
      - -s
      - -w
      - -X main.Version={{ .Tag }}
    tags:
      - sqlite_omit_load_extension

archives:
  - format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else if eq .Arch "arm" }}armv{{ .Arm }}
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}hf{{ end }}

release:
  # 自动检测预发布版本 (包含 alpha, beta, rc 等)
  prerelease: auto
  # 发布名称模板
  name_template: "NodePass Dashboard {{ .Tag }}"
  # 允许替换已存在的发布
  replace_existing_draft: true
  # 发布说明
  header: |
    ## NodePass Dashboard {{ .Tag }}
    
    ### 🎉 新版本发布
    
    感谢使用 NodePass Dashboard！本版本支持多种架构和操作系统。
    
    ### 🏗️ 支持的架构
    - **Linux**: x86_64, ARM64, ARMv7, ARMv6, MIPS, MIPS64, PowerPC64LE, s390x, RISC-V
    - **Windows**: x86_64, i386 (32位)
    - **FreeBSD**: x86_64, ARM64
    - **OpenBSD**: x86_64
    - **NetBSD**: x86_64
    
  footer: |
    
    ### 📥 下载说明
    - **Linux x86_64**: `nodepassdash_Linux_x86_64.tar.gz`
    - **Linux ARM64**: `nodepassdash_Linux_arm64.tar.gz`
    - **Linux ARMv7**: `nodepassdash_Linux_armv7hf.tar.gz` (树莓派2/3/4)
    - **Linux ARMv6**: `nodepassdash_Linux_armv6.tar.gz` (树莓派1)
    - **路由器 MIPS**: `nodepassdash_Linux_mips.tar.gz` 或 `nodepassdash_Linux_mipsle.tar.gz`
    - **Windows 64位**: `nodepassdash_Windows_x86_64.zip`
    - **Windows 32位**: `nodepassdash_Windows_i386.zip`
    - **FreeBSD**: `nodepassdash_Freebsd_*.tar.gz`
    
    ### 🐳 Docker 镜像
    ```bash
    docker pull ghcr.io/nodepass/nodepass-webui:{{ .Tag }}
    ```
    
    ### 🔧 使用说明
    1. 下载对应架构的二进制文件
    2. 解压后直接运行 `./nodepassdash`
    3. 默认监听 `http://localhost:3000` 